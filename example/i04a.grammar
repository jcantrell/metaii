.SYNTAX PROGRAM

PROGRAM = '.SYNTAX' ID .OUT(.LB .TB 'ADR ' * .NL)
          $ ST
          '.END' .OUT(.TB 'END' .NL) ;

ST = ID .OUT(.LB * .NL) '=' EX1 '.,' .OUT(.TB 'R' .NL) ;

EX1 = EX2 $('/' .OUT(.TB 'BT L' # .NL) EX2 )
      .OUT(.LB 'L'# .NL) ;

EX2 = (EX3 .OUT(.TB 'BF L' # .NL) / OUTPUT)
      $(EX3 .OUT(.TB 'BE' .NL) / OUTPUT)
      .OUT(.LB 'L'# .NL) ;

EX3 = ID        .OUT(.TB 'CLL '* .NL) /
      STRING    .OUT(.TB 'TST '* .NL) /
      '.ID'     .OUT(.TB 'ID' .NL)    /
      '.NUMBER' .OUT(.TB 'NUM' .NL)   /
      '.STRING' .OUT(.TB 'SR' .NL)    /
      '(' EX1 ')'             /
      '.EMPTY'  .OUT(.TB 'SET' .NL)   /
      '$' .OUT(.LB 'L'# .NL) EX3 .OUT(.TB 'BT L' # .NL) .OUT(.TB 'SET' .NL) ;

OUTPUT = ('.OUT' '('$OUT1 ')' /
          '.LABEL' .OUT(.TB 'LB' .NL) OUT1)
         .OUT(.TB 'OUT' .NL) ;

OUT1 = '*1'    .OUT(.TB 'GN1' .NL)  /
       '*2'    .OUT(.TB 'GN2' .NL)  /
       '*'     .OUT(.TB 'CI' .NL)   /
       STRING  .OUT(.TB 'CL '* .NL) ;

.TOKENS

PREFIX : $.ANY(32!9!13!10) ;
ID     : PREFIX .TOKEN ALPHA $(ALPHA/DIGIT) .DELTOK ;
NUMBER : PREFIX .TOKEN DIGIT $DIGIT .DELTOK ;
STRING : PREFIX .TOKEN .ANY(39) $.ANYBUT(13!10!39) .ANY(39) .DELTOK ;
ALPHA  : .ANY('A:'Z!'a:'z) ;
DIGIT  : .ANY('0:'9) ;

.END
